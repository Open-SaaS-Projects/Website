steps:
  # ============================
  # 1. Build Website Image
  # ============================
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "us-central1-docker.pkg.dev/peerless-robot-467817-u8/makkn-docker-repo/website:latest"
      - "-f"
      - "Dockerfile"
      - "."
    id: "build-website"

  # ============================
  # 2. Push Website Image
  # ============================
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "us-central1-docker.pkg.dev/peerless-robot-467817-u8/makkn-docker-repo/website:latest"
    waitFor: ["build-website"]
    id: "push-website"

  # ============================
  # 3. Deploy Website to Cloud Run
  # ============================
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "gcloud"
    args:
      - "run"
      - "deploy"
      - "website"
      - "--image"
      - "us-central1-docker.pkg.dev/peerless-robot-467817-u8/makkn-docker-repo/website:latest"
      - "--region"
      - "us-central1"
      - "--platform"
      - "managed"
      - "--allow-unauthenticated"
      - "--port"
      - "3000" # Make sure your Dockerfile exposes this port
      - "--memory"
      - "512Mi"
      - "--cpu"
      - "500m"
      - "--timeout"
      - "300"
      - "--max-instances"
      - "1"
    waitFor: ["push-website"]
    id: "deploy-website"

  # ============================
  # 4. Update Traffic
  # ============================
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "gcloud"
    args:
      - "run"
      - "services"
      - "update-traffic"
      - "website"
      - "--region"
      - "us-central1"
      - "--to-latest"
    waitFor: ["deploy-website"]
    id: "update-website-traffic"

# ============================
# Optional Settings
# ============================
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: "E2_HIGHCPU_8"

timeout: "900s"

images:
  - "us-central1-docker.pkg.dev/peerless-robot-467817-u8/makkn-docker-repo/website:latest"
